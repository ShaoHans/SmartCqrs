version: '3.4'

services:
  #服务名称
  smartcqrs.api:
    #镜像名称
    image: smartcqrs.api:1.0
    #由于是自己开发的asp.net core应用解决方案，所以在测试环境部署还是需要设置build部分来构建应用的镜像
    build:
      #构建上下文，asp.net core应用解决方案的根目录
      context: .
      #Dockerfile文件所在的路径，该文件一般是定义在asp.net core 项目的根目录中，所以要指定具体路径
      dockerfile: Services/SmartCqrs.API/Dockerfile
      #构建镜像时需要的参数
      args: 
        #为asp.net core应用的环境变量赋值Staging，应用在启动时会加载 appsettings.Staging.json 配置文件，
        #在 appsettings.Staging.json 配置文件中配置的数据库连接字符串相关参数值就是如下postgresserver镜像服务设置的值
        - environment=Staging
    networks:
      - smartcqrs-staging
    ports:
      #前面时宿主的端口号，后面是镜像的端口号
      - "9800:8800"
    depends_on:
      #依赖postgres数据库服务镜像，只有它先启动，本应用服务才会启动
      - postgresserver

  postgresserver:
    #镜像名称，如果docker中不存在该镜像，会去docker中指定的镜像源pull下来
    image: postgres:11.1
    restart: always
    environment:
         POSTGRES_PASSWORD: 123@456
         POSTGRES_USER: postgres
         POSTGRES_DB: smart_blog
    ports:
       #只指定一个端口时，该端口代表的是容器的端口，宿主端口随机生成
       #- "5432:5432"
       - "5432"
    volumes:
      # 把postgres数据库镜像中数据保存的目录挂载到宿主目录/home/pgdb，这样如果postgres数据库容器删除，数据不会跟着删除
      - /home/pgdb:/var/lib/postgresql/data
    networks:
      - smartcqrs-staging


networks:
  smartcqrs-staging:
    driver: bridge

#volumes:
  
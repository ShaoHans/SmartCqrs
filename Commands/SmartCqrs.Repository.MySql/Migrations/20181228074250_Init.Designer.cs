// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartCqrs.Repository.MySql;

namespace SmartCqrs.Repository.MySql.Migrations
{
    [DbContext(typeof(SmartBlogMySqlDbContext))]
    [Migration("20181228074250_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687");

            modelBuilder.Entity("SmartCqrs.Domain.Models.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CollectCount");

                    b.Property<int>("CommentCount");

                    b.Property<string>("Content")
                        .IsRequired();

                    b.Property<string>("CoverUrl")
                        .HasColumnType("varchar(512)");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("UpdatedTime");

                    b.Property<byte[]>("UserId")
                        .IsRequired()
                        .HasConversion(new ValueConverter<byte[], byte[]>(v => default(byte[]), v => default(byte[]), new ConverterMappingHints(size: 16)));

                    b.Property<int>("ViewCount");

                    b.HasKey("Id");

                    b.ToTable("blog");
                });

            modelBuilder.Entity("SmartCqrs.Domain.Models.BlogCollect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BlogId");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<byte[]>("UserId")
                        .IsRequired()
                        .HasConversion(new ValueConverter<byte[], byte[]>(v => default(byte[]), v => default(byte[]), new ConverterMappingHints(size: 16)));

                    b.HasKey("Id");

                    b.ToTable("blog_collect");
                });

            modelBuilder.Entity("SmartCqrs.Domain.Models.BlogComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BlogId");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<int>("LikeCount");

                    b.Property<int>("ReplyCount");

                    b.Property<byte[]>("UserId")
                        .IsRequired()
                        .HasConversion(new ValueConverter<byte[], byte[]>(v => default(byte[]), v => default(byte[]), new ConverterMappingHints(size: 16)));

                    b.HasKey("Id");

                    b.ToTable("blog_comment");
                });

            modelBuilder.Entity("SmartCqrs.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("varchar(512)");

                    b.Property<string>("CityName")
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("LastLoginTime");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("varchar(16)");

                    b.Property<string>("NickName")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(40)");

                    b.Property<string>("ProvinceName")
                        .HasColumnType("varchar(36)");

                    b.Property<int>("RegisterChannel")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<DateTime>("RegisterTime");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<byte[]>("UserId")
                        .IsRequired()
                        .HasConversion(new ValueConverter<byte[], byte[]>(v => default(byte[]), v => default(byte[]), new ConverterMappingHints(size: 16)));

                    b.HasKey("Id");

                    b.HasIndex("Mobile")
                        .IsUnique();

                    b.ToTable("user");
                });

            modelBuilder.Entity("SmartCqrs.Domain.Models.UserAsset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CollectBlogCount");

                    b.Property<int>("CommentBlogCount");

                    b.Property<int>("PublishBlogCount");

                    b.Property<int>("TotalPoint");

                    b.Property<byte[]>("UserId")
                        .IsRequired()
                        .HasConversion(new ValueConverter<byte[], byte[]>(v => default(byte[]), v => default(byte[]), new ConverterMappingHints(size: 16)));

                    b.HasKey("Id");

                    b.ToTable("user_asset");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SmartCqrs.Enumeration;
using SmartCqrs.Repository;

namespace SmartCqrs.Repository.Migrations
{
    [DbContext(typeof(SmartBlogDbContext))]
    partial class SmartBlogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SmartCqrs.Domain.Models.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("CollectCount")
                        .HasColumnName("collect_count");

                    b.Property<int>("CommentCount")
                        .HasColumnName("comment_count");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnName("content");

                    b.Property<string>("CoverUrl")
                        .HasColumnName("cover_url")
                        .HasColumnType("varchar(512)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnName("created_time");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnName("updated_time");

                    b.Property<Guid>("UserId")
                        .HasColumnName("user_id");

                    b.Property<int>("ViewCount")
                        .HasColumnName("view_count");

                    b.HasKey("Id")
                        .HasName("pk_blogs");

                    b.ToTable("blog");
                });

            modelBuilder.Entity("SmartCqrs.Domain.Models.BlogCollect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("BlogId")
                        .HasColumnName("blog_id");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnName("created_time");

                    b.Property<Guid>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_blog_collects");

                    b.ToTable("blog_collect");
                });

            modelBuilder.Entity("SmartCqrs.Domain.Models.BlogComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("BlogId")
                        .HasColumnName("blog_id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnName("content")
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnName("created_time");

                    b.Property<int>("LikeCount")
                        .HasColumnName("like_count");

                    b.Property<int>("ReplyCount")
                        .HasColumnName("reply_count");

                    b.Property<Guid>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_blog_comments");

                    b.ToTable("blog_comment");
                });

            modelBuilder.Entity("SmartCqrs.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("AvatarUrl")
                        .HasColumnName("avatar_url")
                        .HasColumnType("varchar(512)");

                    b.Property<string>("CityName")
                        .HasColumnName("city_name")
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("LastLoginTime")
                        .HasColumnName("last_login_time");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnName("mobile")
                        .HasColumnType("varchar(16)");

                    b.Property<string>("NickName")
                        .HasColumnName("nick_name")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasColumnType("varchar(40)");

                    b.Property<string>("ProvinceName")
                        .HasColumnName("province_name")
                        .HasColumnType("varchar(36)");

                    b.Property<int>("RegisterChannel")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("register_channel")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("RegisterTime")
                        .HasColumnName("register_time");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValue(0);

                    b.Property<Guid>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("Mobile")
                        .IsUnique();

                    b.ToTable("user_info");
                });

            modelBuilder.Entity("SmartCqrs.Domain.Models.UserAsset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("CollectBlogCount")
                        .HasColumnName("collect_blog_count");

                    b.Property<int>("PublishBlogCount")
                        .HasColumnName("publish_blog_count");

                    b.Property<int>("TotalPoint")
                        .HasColumnName("total_point");

                    b.Property<Guid>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_user_assets");

                    b.ToTable("user_asset");
                });
#pragma warning restore 612, 618
        }
    }
}

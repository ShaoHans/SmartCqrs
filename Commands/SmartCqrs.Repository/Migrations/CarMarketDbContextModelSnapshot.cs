// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SmartCqrs.Enumeration;
using SmartCqrs.Repository;

namespace SmartCqrs.Repository.Migrations
{
    [DbContext(typeof(CarMarketDbContext))]
    partial class CarMarketDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SmartCqrs.Domain.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnName("brand_name")
                        .HasColumnType("varchar(40)")
                        .HasAnnotation("Npgsql:Comment", "车品牌名称");

                    b.Property<int>("CollectCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("collect_count")
                        .HasDefaultValue(0)
                        .HasAnnotation("Npgsql:Comment", "收藏数量");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description")
                        .HasColumnType("varchar(1000)")
                        .HasAnnotation("Npgsql:Comment", "描述");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnName("image")
                        .HasColumnType("jsonb")
                        .HasAnnotation("Npgsql:Comment", "车辆图片，以jsonb格式存储");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnName("model_name")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("Npgsql:Comment", "车型名称");

                    b.Property<int>("OrderCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("order_count")
                        .HasDefaultValue(0)
                        .HasAnnotation("Npgsql:Comment", "产生的订单数量");

                    b.Property<DateTime>("PublishedTime")
                        .HasColumnName("published_time")
                        .HasAnnotation("Npgsql:Comment", "发布时间");

                    b.Property<decimal>("SalesPrice")
                        .HasColumnName("sales_price")
                        .HasColumnType("decimal(18,2)")
                        .HasAnnotation("Npgsql:Comment", "售价");

                    b.Property<int>("SalesQty")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sales_qty")
                        .HasDefaultValue(0)
                        .HasAnnotation("Npgsql:Comment", "已售数量");

                    b.Property<string>("SeriesName")
                        .IsRequired()
                        .HasColumnName("series_name")
                        .HasColumnType("varchar(40)")
                        .HasAnnotation("Npgsql:Comment", "车系名称");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValue(1)
                        .HasAnnotation("Npgsql:Comment", "状态（1：售卖中，2：已下架，9：已删除）");

                    b.Property<int>("StockQty")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("stock_qty")
                        .HasDefaultValue(0)
                        .HasAnnotation("Npgsql:Comment", "库存数量");

                    b.Property<string>("StyleName")
                        .HasColumnName("style_name")
                        .HasColumnType("varchar(40)")
                        .HasAnnotation("Npgsql:Comment", "车款式名称");

                    b.Property<string>("Tag")
                        .HasColumnName("tag")
                        .HasColumnType("varchar(18)")
                        .HasAnnotation("Npgsql:Comment", "标签");

                    b.Property<Guid>("UserId")
                        .HasColumnName("user_id")
                        .HasAnnotation("Npgsql:Comment", "发布车辆用户Id");

                    b.Property<int>("ViewCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("view_count")
                        .HasDefaultValue(0)
                        .HasAnnotation("Npgsql:Comment", "浏览数量");

                    b.HasKey("Id")
                        .HasName("pk_cars");

                    b.ToTable("car");
                });

            modelBuilder.Entity("SmartCqrs.Domain.Models.CollectCar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("CarId")
                        .HasColumnName("car_id");

                    b.Property<DateTime>("CollectedTime")
                        .HasColumnName("collected_time");

                    b.Property<Guid>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_collect_cars");

                    b.ToTable("collect_car");
                });

            modelBuilder.Entity("SmartCqrs.Domain.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("CarId")
                        .HasColumnName("car_id");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnName("order_date");

                    b.Property<string>("OrderNo")
                        .IsRequired()
                        .HasColumnName("order_no")
                        .HasColumnType("varchar(40)");

                    b.Property<decimal?>("Price")
                        .HasColumnName("price");

                    b.Property<int>("Qty")
                        .HasColumnName("qty");

                    b.Property<int>("Status")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnName("updated_time");

                    b.Property<Guid>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_orders");

                    b.ToTable("purchase_order");
                });

            modelBuilder.Entity("SmartCqrs.Domain.Models.SysConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("ParamKey")
                        .IsRequired()
                        .HasColumnName("param_key")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ParamValue")
                        .IsRequired()
                        .HasColumnName("param_value")
                        .HasColumnType("varchar(4000)");

                    b.Property<string>("Remark")
                        .IsRequired()
                        .HasColumnName("remark")
                        .HasColumnType("varchar(500)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValue(1);

                    b.HasKey("Id")
                        .HasName("pk_sys_configs");

                    b.HasIndex("ParamKey")
                        .IsUnique();

                    b.ToTable("sys_config");
                });

            modelBuilder.Entity("SmartCqrs.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Avatar")
                        .HasColumnName("avatar")
                        .HasColumnType("varchar(512)");

                    b.Property<string>("CityName")
                        .HasColumnName("city_name")
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("LastLoginTime")
                        .HasColumnName("last_login_time");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnName("mobile")
                        .HasColumnType("varchar(16)");

                    b.Property<string>("NickName")
                        .HasColumnName("nick_name")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasColumnType("varchar(40)");

                    b.Property<string>("ProvinceName")
                        .HasColumnName("province_name")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("RealName")
                        .HasColumnName("real_name")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("RegisterChannel")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("register_channel")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("RegisterTime")
                        .HasColumnName("register_time");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValue(0);

                    b.Property<Guid>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("Mobile")
                        .IsUnique();

                    b.ToTable("userinfo");
                });

            modelBuilder.Entity("SmartCqrs.Domain.Models.UserAsset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("CollectCarCount")
                        .HasColumnName("collect_car_count");

                    b.Property<int>("OrderCount")
                        .HasColumnName("order_count");

                    b.Property<int>("SellingCarCount")
                        .HasColumnName("selling_car_count");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnName("updated_time");

                    b.Property<Guid>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_user_assets");

                    b.ToTable("user_asset");
                });

            modelBuilder.Entity("SmartCqrs.Domain.Models.ViewCarLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("CarId")
                        .HasColumnName("car_id");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnName("created_time");

                    b.Property<string>("Ip")
                        .HasColumnName("ip")
                        .HasColumnType("varchar(64)");

                    b.Property<Guid?>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_view_car_logs");

                    b.ToTable("view_car_log");
                });
#pragma warning restore 612, 618
        }
    }
}
